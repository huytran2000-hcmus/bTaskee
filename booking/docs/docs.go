// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/tasks": {
            "post": {
                "description": "Create a new task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "Create a new task",
                "parameters": [
                    {
                        "description": "Create Task Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateTaskRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/restful.successResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/restful.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/tasks/{id}": {
            "get": {
                "description": "Get a task by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Task"
                ],
                "summary": "Get a task by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/restful.successResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.Task"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "bad request",
                        "schema": {
                            "$ref": "#/definitions/restful.errorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.CreateTaskRequest": {
            "type": "object",
            "required": [
                "assigned_location",
                "customer",
                "tasker",
                "working_details"
            ],
            "properties": {
                "assigned_location": {
                    "$ref": "#/definitions/model.Location"
                },
                "customer": {
                    "$ref": "#/definitions/model.Customer"
                },
                "note": {
                    "type": "string",
                    "example": "Be here ontime"
                },
                "tasker": {
                    "$ref": "#/definitions/model.Tasker"
                },
                "working_details": {
                    "$ref": "#/definitions/model.WorkingDetails"
                }
            }
        },
        "model.Customer": {
            "type": "object",
            "required": [
                "email",
                "name",
                "phone"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "minhhuy@gmail.com"
                },
                "name": {
                    "type": "string",
                    "example": "huy tran"
                },
                "phone": {
                    "type": "string",
                    "example": "+84948337945"
                }
            }
        },
        "model.HouseType": {
            "type": "string",
            "enum": [
                "two_room",
                "three_room",
                "four_room"
            ],
            "x-enum-varnames": [
                "TwoRoom",
                "ThreeRoom",
                "FourRoom"
            ]
        },
        "model.Identification": {
            "type": "object",
            "properties": {
                "cccd": {
                    "type": "string",
                    "example": "999999999999"
                },
                "cmnd": {
                    "type": "string",
                    "example": "888888888"
                }
            }
        },
        "model.Location": {
            "type": "object",
            "required": [
                "address"
            ],
            "properties": {
                "address": {
                    "type": "string",
                    "example": "60 Bến Thành, Quận 1, TP.Hồ Chí Minh"
                }
            }
        },
        "model.ServiceType": {
            "type": "string",
            "enum": [
                "cleaning",
                "childcare"
            ],
            "x-enum-varnames": [
                "Cleaning",
                "ChildCare"
            ]
        },
        "model.Task": {
            "type": "object",
            "properties": {
                "assigned_location": {
                    "$ref": "#/definitions/model.Location"
                },
                "customer": {
                    "$ref": "#/definitions/model.Customer"
                },
                "id": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "tasker": {
                    "$ref": "#/definitions/model.Tasker"
                },
                "total": {
                    "type": "number"
                },
                "working_details": {
                    "$ref": "#/definitions/model.WorkingDetails"
                }
            }
        },
        "model.Tasker": {
            "type": "object",
            "required": [
                "email",
                "id",
                "identification",
                "name",
                "phone"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "minhhuydev2000@gmail.com"
                },
                "id": {
                    "type": "string",
                    "example": "1"
                },
                "identification": {
                    "$ref": "#/definitions/model.Identification"
                },
                "name": {
                    "type": "string",
                    "example": "huy tran"
                },
                "phone": {
                    "type": "string",
                    "example": "+84948337945"
                }
            }
        },
        "model.WorkingDetails": {
            "type": "object",
            "required": [
                "from_time",
                "house_type",
                "service_types",
                "to_time"
            ],
            "properties": {
                "from_time": {
                    "type": "string",
                    "example": "2024-04-07T09:00:00+07:00"
                },
                "house_type": {
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.HouseType"
                        }
                    ],
                    "example": "two_room"
                },
                "service_types": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/model.ServiceType"
                    },
                    "example": [
                        "cleaning"
                    ]
                },
                "to_time": {
                    "type": "string",
                    "example": "2024-04-07T11:00:00+07:00"
                }
            }
        },
        "restful.errorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "restful.successResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Booking API",
	Description:      "This is booking apis",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
